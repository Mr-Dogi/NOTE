grep 특정 파일에서 지정한 문자열이나 정규표현식을 포함하는 행을 출력

grep 'hello' 파일명 n...

grep ''

자주 사용하는 옵션

 i 대소문자 구분 안함
 r 하워디렉토리의 모든파일
 E 찾을 패턴을 정규표현식으로 찾기
 n 라인 번호 출력
 

find [옵션] [경로] [표현식] 리눅스 파일 시스템에서 파일을 검색하는데 사용하는 명령어

표현식 name 
         type   d : 디렉토리   f : 일반적인 파일  l : 심볼릭 링크
         user
         exec        명령어 입력 후 {} \;
         size         + 이상 - 이하

#!/bin/bash    // 시작문구

ln 링크 생성 명령어

chmod +x +w +r 특정권한 부여  chowd 소유자 소속그룹 변경

cp, mv 대상 타겟        

p옵션 해당행 출력

sed -n -e '7,$p' sed_test_file.txt   7 마지막 줄까지 출력
sed -n -e '1,3p' sed_test_file.txt   1-3줄까지 출력
sed -n -e '3p' sed_test_file.txt     해당 라인말 출력

-e 옵션을 통해 여러 조건을 사용가능하다.

d옵션 해당행 삭제

sed -n -e '1,2d' sed_test_file.txt 

s옵션 검색한 단언 새로운 단어로 치환

sed -n -e 's/old/new/q' sed_test_file.txt 

q의 뜻은 global 전체 실행이라는 뜻이다.

정규표현식

^ 문자의 시작 $ 문자의 끝
. 하나의 문자와 대응 * 하나이상의 문자와 대응
/ 정규표현식을 일반 문자로 ?
/<단어 해당 단어로 시작하는
단어>/  해당단어로 끝나는
? 문자가 한개가 있거나 없거나
[1-4] 범위로 표현가능
[^1-4] 해당 범위는 제외

a＼{n＼} 앞에 문자 n번 반복
a＼{n,＼} 앞에 문자 n번 이상 반복
a＼{m,n＼} 앞에 문자 m번이상 n번이하 반ㄴ복

[:alnum:] 알파벳 문자와 숫자로 이루어진
[:alpha:]  알파벳으로 이루어진
[:digit:]  숫자로 이루어진
[:xdigit:]  16진수로 이루어진 

vi 단축키

dd 행 삭제
dw 커서뒤 삭제

s 커서부터 편집

:set nu 숫자 표시

yy 해당행 복사
p 붙여넣기

u 명령어 취소

숫자연산은 
`
`expr 10 + 2`
or
$((10 + 2))

로 사용할수있다.

랜덤한 숫자를 출력하기 위해서는 
$(($RANDOM % N-1 ))

raed를 통해 숫자를 입력받음

` `  해당 문자안에 커멘드를 넣으면 터미널에서 실행하는것과 같은 효과가 난다.

bc는 실수 계산을 할수있으며 bc -l을 사용하여 정밀계산을 할수있다.

문자열 변수 내에 같에서 치환 삭제 바꾸기

// 문자열에서 어느부분을 출력할것인지
${변수이름: 2-}
${변수이름: -4}
${변수이름: 2-5}

${변수이름#삭제문자}      처음부터 시작해서 처음으로 일치하는
${hello##hi}                  처음부터 시작해서 처음으로 일치하는
${hello%hi}                   끝에서부터 처음으로 찾는
${hello%%hi}                끝에서부터 마지막으로 찾는

${변수명/old/new}         처음찾은거 변경
${변수명//old/new}        전부변경

${#변수이름} 	       변수의 길이를 출력
